name: Build for Windows
on: 
    push:
    pull_request:
    release:
      types: # This configuration does not affect the page_build event above
        - created

jobs:
    build:
        runs-on: windows-2019
        steps:
            - uses: actions/checkout@v1
              with:
                  submodules: true
            
            - name: Install vcpkg # ToDo: delete when Github updates the shipped vcpkg version to the one that has libssh 0.9.3
              run: |
                  git clone https://github.com/microsoft/vcpkg C:\my_vcpkg
                  C:\my_vcpkg\bootstrap-vcpkg.bat
                  vcpkg version
                                    
            - name: Update vcpkg triplet to only build release
              run: |
                  #"`r`nset(VCPKG_BUILD_TYPE release)" | Add-Content "$env:VCPKG_INSTALLATION_ROOT\triplets\x64-windows-static.cmake"
                  "`r`nset(VCPKG_BUILD_TYPE release)" | Add-Content "C:\my_vcpkg\triplets\x64-windows-static.cmake"
                  
            - name: Install libssh and Boost with vcpkg
              run: |
                  C:\my_vcpkg\vcpkg install --triplet x64-windows-static boost-beast boost-asio boost-system libssh[core,openssl]
            - name: Create ssh version
              run: |
                  #cmake -S . -B build -DWITH_WEBSOCKETS=OFF -G "Visual Studio 16 2019" -A x64 -DVCPKG_TARGET_TRIPLET="x64-windows-static" -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release
                  cmake -S . -B build -DWITH_WEBSOCKETS=OFF -G "Visual Studio 16 2019" -A x64 -DVCPKG_TARGET_TRIPLET="x64-windows-static" -DCMAKE_TOOLCHAIN_FILE="C:\my_vcpkg\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release
            - name: Build CidSSH in Release mode
              run: |
                  cmake --build build --config Release
            - name: Create ws version
              run: |
                  #cmake -S . -B build_ws -DWITH_WEBSOCKETS=ON -G "Visual Studio 16 2019" -A x64 -DVCPKG_TARGET_TRIPLET="x64-windows-static" -DCMAKE_TOOLCHAIN_FILE="$env:VCPKG_INSTALLATION_ROOT\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release
                  cmake -S . -B build_ws -DWITH_WEBSOCKETS=ON -G "Visual Studio 16 2019" -A x64 -DVCPKG_TARGET_TRIPLET="x64-windows-static" -DCMAKE_TOOLCHAIN_FILE="C:\my_vcpkg\scripts\buildsystems\vcpkg.cmake" -DCMAKE_BUILD_TYPE=Release
            - name: Build CidSSH in Release mode
              run: |
                  cmake --build build_ws --config Release
                  
            - uses: actions/upload-artifact@master
              with:
                  name: CidSSH_win_ssh_x64.exe
                  path: build/src/malware/Release/CidSSH.exe                 
            - uses: actions/upload-artifact@master
              with:
                  name: CidSSH_win_ws_x64.exe
                  path: build_ws/src/malware/Release/CidSSH.exe

    release:
        runs-on: ubuntu-latest
        if: github.event_name == 'release'
        needs: build
        steps:
            - name: Download CidSSH ssh version
              uses: actions/download-artifact@v1
              with:
                  name: CidSSH_win_ssh_x64.exe
            
            - name: list files
              run: ls -lha
            
            - name: Upload ssh arifact to Github release
              uses: actions/upload-release-asset@v1
              env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: CidSSH_win_ssh_x64.exe/CidSSH
                  asset_name: CidSSH_win_ssh_x64.exe
                  asset_content_type: application/octet-stream
                  
            - name: Download CidSSH ws version
              uses: actions/download-artifact@v1
              with:
                  name: CidSSH_win_ws_x64.exe
            - name: Upload ws arifact to Github release
              uses: actions/upload-release-asset@v1
              env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ github.event.release.upload_url }}
                  asset_path: CidSSH_win_ws_x64.exe/CidSSH
                  asset_name: CidSSH_win_ws_x64.exe
                  asset_content_type: application/octet-stream      