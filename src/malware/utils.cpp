
#include "global.h"

#include <cstdio>
#include <cstdlib>
#include <cstring>

void help(char* self)
{
	debug("Usage: %s [user@C2_hostname\n", self);
	debug("Example: %s user@C2_hostname\n", self);
	debug("Example: %s -t 16909060\n", self);
	debug("Example: %s hostname\n", self);
	debug("Default user is `anonymous`\n");
	exit(1);
}

void integer_to_ip(int ip, char* result)
{
	unsigned char bytes[4];
	bytes[0] = ip & 0xFF;
	bytes[1] = (ip >> 8) & 0xFF;
	bytes[2] = (ip >> 16) & 0xFF;
	bytes[3] = (ip >> 24) & 0xFF;
	snprintf(result, 15, "%d.%d.%d.%d", bytes[3], bytes[2], bytes[1], bytes[0]);
}

void parse_args(int argc, char** argv, char* C2_SSH_host, char* C2_SSH_username)
{

	char* ptr;
	char* ssh_server_port = nullptr;
	if(argc < 2 || argc > 3)
	{
		help(argv[0]);
	}

	/* integer IP*/
	if(argc == 3 && memcmp(argv[1], "-t", 2) == 0)
	{
		unsigned long ip_integer = strtoul(argv[2], nullptr, 10);
		if(ip_integer == 0)
		{
			help(argv[0]);
		}
		integer_to_ip(ip_integer, C2_SSH_host);
		return;
	}

	ptr = strchr(argv[1], '@');
	if(ptr != nullptr)
	{
		ptr[0] = '\0';
		C2_SSH_username[0] = '\0';
		strncpy(C2_SSH_username, argv[1], sizeof(C2_SSH_username) - 1);
		strncpy(C2_SSH_host, ptr + 1, sizeof(C2_SSH_host) - 1);
	}
	else
	{
		strncpy(C2_SSH_host, argv[1], sizeof(C2_SSH_host) - 1);
	}

	if(C2_SSH_host[0] == '0')
	{
		help(argv[0]);
	}
}